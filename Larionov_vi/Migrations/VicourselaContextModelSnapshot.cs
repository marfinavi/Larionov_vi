// <auto-generated />
using System;
using Larionov_vi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Larionov_vi.Migrations
{
    [DbContext(typeof(VicourselaContext))]
    partial class VicourselaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Larionov_vi.Models.Группы", b =>
                {
                    b.Property<int>("КодГруппы")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодГруппы"), 1L, 1);

                    b.Property<int>("ГодКурса")
                        .HasColumnType("int");

                    b.Property<string>("НазваниеГруппы")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Специализация")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("КодГруппы")
                        .HasName("PK__Группы__C53084C65915E8B2");

                    b.HasIndex(new[] { "НазваниеГруппы" }, "UQ__Группы__AC501ED3E29F7299")
                        .IsUnique();

                    b.ToTable("Группы", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Задания", b =>
                {
                    b.Property<int>("КодЗадания")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодЗадания"), 1L, 1);

                    b.Property<DateTime>("ДатаСдачи")
                        .HasColumnType("date");

                    b.Property<int>("КодКурса")
                        .HasColumnType("int");

                    b.Property<string>("Название")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Описание")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("КодЗадания")
                        .HasName("PK__Задания__1AB5BEBC25EA9CA3");

                    b.HasIndex("КодКурса");

                    b.ToTable("Задания", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Занятия", b =>
                {
                    b.Property<int>("КодЗанятия")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодЗанятия"), 1L, 1);

                    b.Property<string>("Аудитория")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeSpan>("ВремяНачала")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ВремяОкончания")
                        .HasColumnType("time");

                    b.Property<DateTime>("ДатаЗанятия")
                        .HasColumnType("date");

                    b.Property<int>("КодКурса")
                        .HasColumnType("int");

                    b.HasKey("КодЗанятия")
                        .HasName("PK__Занятия__8CA853B4DDE2107E");

                    b.HasIndex("КодКурса");

                    b.ToTable("Занятия", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Зачисления", b =>
                {
                    b.Property<int>("КодЗачисления")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодЗачисления"), 1L, 1);

                    b.Property<DateTime>("ДатаЗачисления")
                        .HasColumnType("date");

                    b.Property<int>("КодКурса")
                        .HasColumnType("int");

                    b.Property<int>("КодСтудента")
                        .HasColumnType("int");

                    b.HasKey("КодЗачисления")
                        .HasName("PK__Зачислен__2D95BA62E9DF52BF");

                    b.HasIndex("КодКурса");

                    b.HasIndex("КодСтудента");

                    b.ToTable("Зачисления", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Курсы", b =>
                {
                    b.Property<int>("КодКурса")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодКурса"), 1L, 1);

                    b.Property<int>("КодПреподавателя")
                        .HasColumnType("int");

                    b.Property<int>("Кредиты")
                        .HasColumnType("int");

                    b.Property<string>("НазваниеКурса")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Описание")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("КодКурса")
                        .HasName("PK__Курсы__5E122F8D19B1343B");

                    b.HasIndex("КодПреподавателя");

                    b.ToTable("Курсы", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Пользователи", b =>
                {
                    b.Property<int>("КодПользователя")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодПользователя"), 1L, 1);

                    b.Property<string>("Имя")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("КодРоли")
                        .HasColumnType("int");

                    b.Property<string>("Фамилия")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ХэшПароля")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ЭлектроннаяПочта")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("КодПользователя")
                        .HasName("PK__Пользова__200434A2F1FCAB7E");

                    b.HasIndex("КодРоли");

                    b.HasIndex(new[] { "ЭлектроннаяПочта" }, "UQ__Пользова__372226199806A638")
                        .IsUnique();

                    b.ToTable("Пользователи", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Посещаемость", b =>
                {
                    b.Property<int>("КодПосещаемости")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодПосещаемости"), 1L, 1);

                    b.Property<int>("КодЗанятия")
                        .HasColumnType("int");

                    b.Property<int>("КодСтудента")
                        .HasColumnType("int");

                    b.Property<string>("СтатусПосещаемости")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("КодПосещаемости")
                        .HasName("PK__Посещаем__40245443CD5E7E20");

                    b.HasIndex("КодЗанятия");

                    b.HasIndex("КодСтудента");

                    b.ToTable("Посещаемость", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Программы", b =>
                {
                    b.Property<int>("КодПрограммы")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодПрограммы"), 1L, 1);

                    b.Property<int>("КодФакультета")
                        .HasColumnType("int");

                    b.Property<string>("НазваниеПрограммы")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Продолжительность")
                        .HasColumnType("int");

                    b.HasKey("КодПрограммы")
                        .HasName("PK__Программ__8D5DBFABF25D6D56");

                    b.HasIndex("КодФакультета");

                    b.ToTable("Программы", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.ПрограммыКурсов", b =>
                {
                    b.Property<int>("КодПрограммыКурса")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодПрограммыКурса"), 1L, 1);

                    b.Property<int>("КодКурса")
                        .HasColumnType("int");

                    b.Property<int>("КодПрограммы")
                        .HasColumnType("int");

                    b.HasKey("КодПрограммыКурса")
                        .HasName("PK__Программ__4FC961AA7A903F7C");

                    b.HasIndex("КодКурса");

                    b.HasIndex("КодПрограммы");

                    b.ToTable("ПрограммыКурсов", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Работы", b =>
                {
                    b.Property<int>("КодРаботы")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодРаботы"), 1L, 1);

                    b.Property<DateTime>("ДатаСдачи")
                        .HasColumnType("date");

                    b.Property<int>("КодЗадания")
                        .HasColumnType("int");

                    b.Property<int>("КодСтудента")
                        .HasColumnType("int");

                    b.Property<string>("Комментарии")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Оценка")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("КодРаботы")
                        .HasName("PK__Работы__76A3F6880D1CB017");

                    b.HasIndex("КодЗадания");

                    b.HasIndex("КодСтудента");

                    b.ToTable("Работы", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Роли", b =>
                {
                    b.Property<int>("КодРоли")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодРоли"), 1L, 1);

                    b.Property<string>("НазваниеРоли")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("КодРоли")
                        .HasName("PK__Роли__A2517212851D6471");

                    b.HasIndex(new[] { "НазваниеРоли" }, "UQ__Роли__B867938ED5819691")
                        .IsUnique();

                    b.ToTable("Роли", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.События", b =>
                {
                    b.Property<int>("КодСобытия")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодСобытия"), 1L, 1);

                    b.Property<DateTime>("ДатаСобытия")
                        .HasColumnType("date");

                    b.Property<string>("МестоПроведения")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("НазваниеСобытия")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Описание")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("КодСобытия")
                        .HasName("PK__События__D78AD13A7A39964B");

                    b.ToTable("События", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Студенты", b =>
                {
                    b.Property<int>("КодСтудента")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодСтудента"), 1L, 1);

                    b.Property<int>("ГодПоступления")
                        .HasColumnType("int");

                    b.Property<int>("КодГруппы")
                        .HasColumnType("int");

                    b.Property<int>("КодПользователя")
                        .HasColumnType("int");

                    b.HasKey("КодСтудента")
                        .HasName("PK__Студенты__4036A07509264F9C");

                    b.HasIndex("КодГруппы");

                    b.HasIndex("КодПользователя");

                    b.ToTable("Студенты", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.УчастникиСобытий", b =>
                {
                    b.Property<int>("КодУчастника")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодУчастника"), 1L, 1);

                    b.Property<int>("КодПользователя")
                        .HasColumnType("int");

                    b.Property<int>("КодСобытия")
                        .HasColumnType("int");

                    b.HasKey("КодУчастника")
                        .HasName("PK__Участник__1D4507D0D8174F9C");

                    b.HasIndex("КодПользователя");

                    b.HasIndex("КодСобытия");

                    b.ToTable("УчастникиСобытий", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Факультеты", b =>
                {
                    b.Property<int>("КодФакультета")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("КодФакультета"), 1L, 1);

                    b.Property<string>("Декан")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("НазваниеФакультета")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("КодФакультета")
                        .HasName("PK__Факульте__7E28CC4CAAE2088C");

                    b.HasIndex(new[] { "НазваниеФакультета" }, "UQ__Факульте__58EF202699661899")
                        .IsUnique();

                    b.ToTable("Факультеты", (string)null);
                });

            modelBuilder.Entity("Larionov_vi.Models.Задания", b =>
                {
                    b.HasOne("Larionov_vi.Models.Курсы", "КодКурсаNavigation")
                        .WithMany("Заданияs")
                        .HasForeignKey("КодКурса")
                        .IsRequired()
                        .HasConstraintName("FK__Задания__КодКурс__03F0984C");

                    b.Navigation("КодКурсаNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.Занятия", b =>
                {
                    b.HasOne("Larionov_vi.Models.Курсы", "КодКурсаNavigation")
                        .WithMany("Занятияs")
                        .HasForeignKey("КодКурса")
                        .IsRequired()
                        .HasConstraintName("FK__Занятия__КодКурс__7D439ABD");

                    b.Navigation("КодКурсаNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.Зачисления", b =>
                {
                    b.HasOne("Larionov_vi.Models.Курсы", "КодКурсаNavigation")
                        .WithMany("Зачисленияs")
                        .HasForeignKey("КодКурса")
                        .IsRequired()
                        .HasConstraintName("FK__Зачислени__КодКу__7A672E12");

                    b.HasOne("Larionov_vi.Models.Студенты", "КодСтудентаNavigation")
                        .WithMany("Зачисленияs")
                        .HasForeignKey("КодСтудента")
                        .IsRequired()
                        .HasConstraintName("FK__Зачислени__КодСт__797309D9");

                    b.Navigation("КодКурсаNavigation");

                    b.Navigation("КодСтудентаNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.Курсы", b =>
                {
                    b.HasOne("Larionov_vi.Models.Пользователи", "КодПреподавателяNavigation")
                        .WithMany("Курсыs")
                        .HasForeignKey("КодПреподавателя")
                        .IsRequired()
                        .HasConstraintName("FK__Курсы__КодПрепод__72C60C4A");

                    b.Navigation("КодПреподавателяNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.Пользователи", b =>
                {
                    b.HasOne("Larionov_vi.Models.Роли", "КодРолиNavigation")
                        .WithMany("Пользователиs")
                        .HasForeignKey("КодРоли")
                        .IsRequired()
                        .HasConstraintName("FK__Пользоват__КодРо__6383C8BA");

                    b.Navigation("КодРолиNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.Посещаемость", b =>
                {
                    b.HasOne("Larionov_vi.Models.Занятия", "КодЗанятияNavigation")
                        .WithMany("Посещаемостьs")
                        .HasForeignKey("КодЗанятия")
                        .IsRequired()
                        .HasConstraintName("FK__Посещаемо__КодЗа__00200768");

                    b.HasOne("Larionov_vi.Models.Студенты", "КодСтудентаNavigation")
                        .WithMany("Посещаемостьs")
                        .HasForeignKey("КодСтудента")
                        .IsRequired()
                        .HasConstraintName("FK__Посещаемо__КодСт__01142BA1");

                    b.Navigation("КодЗанятияNavigation");

                    b.Navigation("КодСтудентаNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.Программы", b =>
                {
                    b.HasOne("Larionov_vi.Models.Факультеты", "КодФакультетаNavigation")
                        .WithMany("Программыs")
                        .HasForeignKey("КодФакультета")
                        .IsRequired()
                        .HasConstraintName("FK__Программы__КодФа__693CA210");

                    b.Navigation("КодФакультетаNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.ПрограммыКурсов", b =>
                {
                    b.HasOne("Larionov_vi.Models.Курсы", "КодКурсаNavigation")
                        .WithMany("ПрограммыКурсовs")
                        .HasForeignKey("КодКурса")
                        .IsRequired()
                        .HasConstraintName("FK__Программы__КодКу__75A278F5");

                    b.HasOne("Larionov_vi.Models.Программы", "КодПрограммыNavigation")
                        .WithMany("ПрограммыКурсовs")
                        .HasForeignKey("КодПрограммы")
                        .IsRequired()
                        .HasConstraintName("FK__Программы__КодПр__76969D2E");

                    b.Navigation("КодКурсаNavigation");

                    b.Navigation("КодПрограммыNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.Работы", b =>
                {
                    b.HasOne("Larionov_vi.Models.Задания", "КодЗаданияNavigation")
                        .WithMany("Работыs")
                        .HasForeignKey("КодЗадания")
                        .IsRequired()
                        .HasConstraintName("FK__Работы__КодЗадан__06CD04F7");

                    b.HasOne("Larionov_vi.Models.Студенты", "КодСтудентаNavigation")
                        .WithMany("Работыs")
                        .HasForeignKey("КодСтудента")
                        .IsRequired()
                        .HasConstraintName("FK__Работы__КодСтуде__07C12930");

                    b.Navigation("КодЗаданияNavigation");

                    b.Navigation("КодСтудентаNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.Студенты", b =>
                {
                    b.HasOne("Larionov_vi.Models.Группы", "КодГруппыNavigation")
                        .WithMany("Студентыs")
                        .HasForeignKey("КодГруппы")
                        .IsRequired()
                        .HasConstraintName("FK__Студенты__КодГру__6FE99F9F");

                    b.HasOne("Larionov_vi.Models.Пользователи", "КодПользователяNavigation")
                        .WithMany("Студентыs")
                        .HasForeignKey("КодПользователя")
                        .IsRequired()
                        .HasConstraintName("FK__Студенты__КодПол__6EF57B66");

                    b.Navigation("КодГруппыNavigation");

                    b.Navigation("КодПользователяNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.УчастникиСобытий", b =>
                {
                    b.HasOne("Larionov_vi.Models.Пользователи", "КодПользователяNavigation")
                        .WithMany("УчастникиСобытийs")
                        .HasForeignKey("КодПользователя")
                        .IsRequired()
                        .HasConstraintName("FK__Участники__КодПо__0C85DE4D");

                    b.HasOne("Larionov_vi.Models.События", "КодСобытияNavigation")
                        .WithMany("УчастникиСобытийs")
                        .HasForeignKey("КодСобытия")
                        .IsRequired()
                        .HasConstraintName("FK__Участники__КодСо__0D7A0286");

                    b.Navigation("КодПользователяNavigation");

                    b.Navigation("КодСобытияNavigation");
                });

            modelBuilder.Entity("Larionov_vi.Models.Группы", b =>
                {
                    b.Navigation("Студентыs");
                });

            modelBuilder.Entity("Larionov_vi.Models.Задания", b =>
                {
                    b.Navigation("Работыs");
                });

            modelBuilder.Entity("Larionov_vi.Models.Занятия", b =>
                {
                    b.Navigation("Посещаемостьs");
                });

            modelBuilder.Entity("Larionov_vi.Models.Курсы", b =>
                {
                    b.Navigation("Заданияs");

                    b.Navigation("Занятияs");

                    b.Navigation("Зачисленияs");

                    b.Navigation("ПрограммыКурсовs");
                });

            modelBuilder.Entity("Larionov_vi.Models.Пользователи", b =>
                {
                    b.Navigation("Курсыs");

                    b.Navigation("Студентыs");

                    b.Navigation("УчастникиСобытийs");
                });

            modelBuilder.Entity("Larionov_vi.Models.Программы", b =>
                {
                    b.Navigation("ПрограммыКурсовs");
                });

            modelBuilder.Entity("Larionov_vi.Models.Роли", b =>
                {
                    b.Navigation("Пользователиs");
                });

            modelBuilder.Entity("Larionov_vi.Models.События", b =>
                {
                    b.Navigation("УчастникиСобытийs");
                });

            modelBuilder.Entity("Larionov_vi.Models.Студенты", b =>
                {
                    b.Navigation("Зачисленияs");

                    b.Navigation("Посещаемостьs");

                    b.Navigation("Работыs");
                });

            modelBuilder.Entity("Larionov_vi.Models.Факультеты", b =>
                {
                    b.Navigation("Программыs");
                });
#pragma warning restore 612, 618
        }
    }
}
